# n이 3이면 ***/* */***

# 처음엔 들어온 숫자의 크기만큼 2중 반복문을 돌리며 별이 찍힐 위치 x,y의 점을 이용해 해당 점의 위치가
# 별이 될지 공백이 될지 정하고자 하였다.
# 결과적으로 시간초과가 떴고 시간이 아니더라도 입력된 숫자가 커지는 경우 정가운데를 제외한 사이사이 공백
# 을 제대로 프린트하지 못했음 결과적으로 처음부터 다시 접근해야 했고 단순히 생각하기로 해봤다.

def check(N):
    # N이 1인 겨우 별을 하나 가지는 리스트를 반환
    if N == 1:
        return ['*'] 

    # 재귀를 위해 N을 3으로 나눈 몫을 다시 함수에 넣는다 이 값이 1이 될때까지 재귀반복
    Star = check(N//3)
    # 재귀의 결과를 리스트로 반환하기 위해 필요한 빈 리스트
    result = []

    # 재귀의 결과로 반환된 리스트를 복사하는 과정 처음 첫줄은 좌상단 첫 결과를 무조건 3배한 결과
    for i in Star:
        result.append(i*3)
    # 두번째 줄은 가운데가 공백이며 그 이외에는 쳣 결과를 복사하여 넣는다
    for i in Star:
        result.append(i+' '*(N//3)+i)
    #세번째 줄 또한 첫번째 줄과 동일한 결과
    for i in Star:
        result.append(i*3)

    #  예를 들어 ['*']이 반환되어 온다면 첫 반복문의 결과는 result = ['***']
    #  두번째의 결과는 ['* *']가 되고 세번째는 첫번째와 동일한 결과


    return result
    
N = int(input())


for i in check(N):
    for j in i:
        print(j, end='')
    print()